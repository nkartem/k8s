apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: prometheus-scaledobject
  namespace: exporter-python
spec:
  scaleTargetRef:
    name: python-deployment-exporter
  pollingInterval: 30      # Optional. Default: 30 seconds                         
  cooldownPeriod:  120     # Optional. Default: 300 seconds                        
  minReplicaCount: 1      # Optional. Default: 0                        
  maxReplicaCount: 5       # Optional. Default: 100                        
  # advanced:                # Optional. Section to specify advanced options                        
  #   restoreToOriginalReplicaCount: false       # Optional. Default: false     
  #   horizontalPodAutoscalerConfig:             # Optional. Section to specify HPA related options 
  #     #name: {name-of-hpa-resource}                   # Optional. Default: keda-hpa-{scaled-object-name}   
  #     behavior:                                      # Optional. Use to modify HPA's scaling behavior
  #       scaleDown:
  #         stabilizationWindowSeconds: 30
  #         policies:
  #         - type: Percent
  #           value: 100
  #           periodSeconds: 15
  triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-server.prometheus.svc.cluster.local
      metricName: folder_files_total # DEPRECATED: This parameter is deprecated as of KEDA v2.10 and will be removed in version 2.12
      threshold: '3.0'
      query:  sum(folder_files_total{job="exporter-python-pod"}) > 3.0
        # # Optional fields:
        # namespace: testing  # for namespaced queries, eg. Thanos
        # cortexOrgID: my-org # DEPRECATED: This parameter is deprecated as of KEDA v2.10 in favor of customHeaders and will be removed in version 2.12. Use custom headers instead to set X-Scope-OrgID header for Cortex. (see below)
        # customHeaders: X-Client-Id=cid,X-Tenant-Id=tid,X-Organization-Id=oid # Optional. Custom headers to include in query. In case of auth header, use the custom authentication or relevant authModes.
        # ignoreNullValues: false # Default is `true`, which means ignoring the empty value list from Prometheus. Set to `false` the scaler will return error when Prometheus target is lost
        # unsafeSsl: "false" #  Default is `false`, Used for skipping certificate check when having self signed certs for Prometheus endpoint    