apiVersion : apps/v1
kind : Deployment
metadata : 
  name : mariadb
  labels:
    db : label-deploy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: db-mariadb
  template:
    metadata:
      labels:
        app: db-mariadb # Service will look for those PODS Labels!!!
    spec:
      containers:
      - name: mariadb # 10.8.3   10.7.5
#        image: nkartem/mariadb:10.8.3
        image: mariadb:latest
#        command: ["s3fs k8slocalk8s /opt -o passwd_file=${HOME}/.passwd-s3fs"] # connect S3 backet AWS
#        command: ["mariadbd"]
        env:
        - name: MARIADB_ROOT_PASSWORD
          value: "112233445566"
        - name: MARIADB_DATABASE # This variable allows you to specify the name of a database to be created on image startup.
          value: IntDB
        - name: MARIADB_USER
          value: user
        - name: MARIADB_PASSWORD
          value: userpassword        
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: nfs-pvc-test
        - mountPath: /run/mysqld
          name: nfs-pvc-test
        # - mountPath: /var/lib/mysql
        #   name: name-local-volume1
        # - mountPath: /run/mysqld
        #   name: name-local-volume2


      - name : container-phpmyadmin
        image: phpmyadmin:latest
        ports:
        - containerPort: 80
        env:
        - name: PMA_ARBITRARY
          value: "1" # when set to 1 connection to the arbitrary server will be allowed
        - name: PMA_HOST
          value: '127.0.0.1'
        - name: PMA_PORT
          value: "3306"
        - name: MARIADB_ROOT_PASSWORD
          value: secret

      volumes:
      - name:  nfs-pvc-test
        persistentVolumeClaim:
          claimName: nfs-pvc
      # - name: name-local-volume1
      #   hostPath:
      #     # directory location on host
      #     path: /mnt/opt/podman/mariadb
      #     # this field is optional
      #     type: Directory
      # - name: name-local-volume2
      #   hostPath:
      #     # directory location on host
      #     path: /mnt/opt/podman/mariadb
      #     # this field is optional
      #     type: Directory
      # # - name: name-local-volume3
      # #   hostPath:
      # #     # directory location on host
      # #     path: /opt/.passwd-s3fs
      # # #     # # this field is optional
      # # #     # type: Directory   
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: my-name-mariadb-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mariadb
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50 # max 1000 . 1000 == 1 core 
---
apiVersion: v1
kind: Service
metadata:
  name:  service-name-db
spec:
  selector:
    app:  db-mariadb # Selecting PODS with those Labels
  type:  NodePort # LoadBalancer | ClusterIP | NodePort
  ports:
  - name:  name-of-the-port
    port:  80        # Port on Load Balancer
    targetPort:  80  # Port on POD
---
# For this config you need install NFS server
# https://www.linuxtechi.com/setup-nfs-server-on-centos-8-rhel-8/
# PV
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv1-nfs
#  namespace: test-nfs
spec:
  capacity:
    storage: 5Gi
  # volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  # mountOptions:
  #   - hard
  #   - nfsvers=4.1
  nfs:
    path: /mnt/nfs_shares/k8s
    server: 192.168.1.100 # IP NFS server
---
# For this config you need install NFS server
# https://www.linuxtechi.com/setup-nfs-server-on-centos-8-rhel-8/
# PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
#  namespace: test-nfs
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
  volumeName: pv1-nfs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-config
data:
  S3_REGION: ""
  S3_BUCKET: ""
  AWS_KEY: ""
  AWS_SECRET_KEY: ""